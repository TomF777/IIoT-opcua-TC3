<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="PartsPerMinInstant2" Id="{76e23fd0-6081-4b2c-817c-73b6112f329a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK PartsPerMinInstant2
VAR_INPUT
	// product total count
	TotalCount		: UINT;
END_VAR
VAR_OUTPUT
	// Parts per minut ratio
	PPM							: UINT;
END_VAR
VAR
	InitBit						: BOOL;
	OldTotalCount				: UINT;
	CountDiff					: UINT;
	rtrigTotalCountChanged		: R_TRIG;
	TotalCountChanged			: BOOL;
	SeqState					: INT := 0;
	tonPulseTimer				: TON;
	PulseTime					: TIME;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*
This FB calculates instantaneous parts per minute rate.
It counts pulse time between TotalCount changes. 
TotalCount 		-	 total number of counted products 
*)
IF InitBit THEN
	OldTotalCount := TotalCount;
	InitBit:=FALSE;
END_IF

TotalCountChanged := FALSE;

IF TotalCount > OldTotalCount THEN
	TotalCountChanged := TRUE;
	CountDiff := TotalCount - OldTotalCount;
END_IF;
OldTotalCount := TotalCount;

rtrigTotalCountChanged(CLK:=TotalCountChanged);

CASE SeqState OF
	0:
		IF rtrigTotalCountChanged.Q THEN
			tonPulseTimer.IN:=TRUE;
			SeqState := 10;
		END_IF
	10:
		IF rtrigTotalCountChanged.Q THEN
			PulseTime := tonPulseTimer.ET;
			tonPulseTimer.IN:=FALSE;
			SeqState := 20;
		END_IF
	20:
		tonPulseTimer.IN:=TRUE;
		SeqState := 10;
END_CASE;

tonPulseTimer(PT:=T#10M);

IF TO_INT(PulseTime) <> 0 THEN
	PPM := TO_UINT(TO_REAL(60 * CountDiff) / (TIME_TO_REAL(PulseTime)/1000.0));
END_IF;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>